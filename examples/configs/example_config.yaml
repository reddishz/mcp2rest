server:
  port: 8080
  host: "0.0.0.0"
  mode: "websocket"  # websocket 或 stdio

global:
  timeout: 30s
  max_request_size: "10MB"
  default_headers:
    User-Agent: "MCP2REST/1.0"
    Accept: "application/json"

endpoints:
  - name: "getWeather"
    description: "获取指定城市的天气信息"
    method: "GET"
    url_template: "https://api.weatherapi.com/v1/current.json"
    authentication:
      type: "api_key"
      header_name: "X-API-Key"
      key_env: "WEATHER_API_KEY"
    parameters:
      - name: "q"
        required: true
        description: "城市名称或坐标"
        in: "query"
      - name: "lang"
        required: false
        default: "zh_cn"
        description: "语言"
        in: "query"
    response:
      success_code: 200
      error_codes:
        400: "请求参数错误"
        401: "未授权，请检查API密钥"
        403: "禁止访问"
        404: "未找到资源"
        429: "请求过于频繁，请稍后再试"
        500: "服务器内部错误"
      transform:
        type: "jq"
        expression: "{ location: .location.name, country: .location.country, temp_c: .current.temp_c, condition: .current.condition.text, humidity: .current.humidity }"

  - name: "searchRepositories"
    description: "搜索GitHub仓库"
    method: "GET"
    url_template: "https://api.github.com/search/repositories"
    authentication:
      type: "bearer"
      token_env: "GITHUB_TOKEN"
    parameters:
      - name: "q"
        required: true
        description: "搜索关键词"
        in: "query"
      - name: "sort"
        required: false
        default: "stars"
        description: "排序字段"
        in: "query"
      - name: "order"
        required: false
        default: "desc"
        description: "排序顺序"
        in: "query"
      - name: "per_page"
        required: false
        default: 10
        description: "每页结果数"
        in: "query"
    response:
      success_code: 200
      error_codes:
        401: "未授权，请检查令牌"
        403: "禁止访问，可能超出API限制"
        422: "请求参数无效"
      transform:
        type: "jq"
        expression: "{ total_count: .total_count, items: [.items[] | { name: .name, full_name: .full_name, description: .description, stars: .stargazers_count, url: .html_url }] }"

  - name: "createGist"
    description: "创建GitHub Gist"
    method: "POST"
    url_template: "https://api.github.com/gists"
    authentication:
      type: "bearer"
      token_env: "GITHUB_TOKEN"
    parameters:
      - name: "description"
        required: false
        description: "Gist描述"
        in: "body"
      - name: "public"
        required: false
        default: false
        description: "是否公开"
        in: "body"
      - name: "files"
        required: true
        description: "文件内容"
        in: "body"
    response:
      success_code: 201
      error_codes:
        401: "未授权，请检查令牌"
        422: "请求参数无效"
      transform:
        type: "jq"
        expression: "{ id: .id, html_url: .html_url, created_at: .created_at }"